import unittest
import unum
__author__ = 'reynolds12'


class TestSetenv(unittest.TestCase):

    def __init__(self, methodName='runTest'):
        super(TestSetenv, self).__init__(methodName)
        self.old_e = 0
        self.old_f = 0

    def setUp(self):
        self.old_e = unum.esizesize
        self.old_f = unum.fsizesize

    def tearDown(self):
        unum.setenv ((self.old_e, self.old_f))

    def test_setenv_0_0(self):
        unum.setenv((0, 0))
        self.assertEqual (unum.esizesize, 0)
        self.assertEqual (unum.fsizesize, 0)
        self.assertEqual (unum.esizemax, 1)
        self.assertEqual (unum.fsizemax, 1)
        self.assertEqual (unum.utagsize, 1)
        self.assertEqual (unum.maxubits, 4)
        self.assertEqual (unum.ubitmask, 1)
        self.assertEqual (unum.fsizemask, 0)
        self.assertEqual (unum.esizemask, 0)
        self.assertEqual (unum.efsizemask, 0)
        self.assertEqual (unum.utagmask, 1)
        self.assertEqual (unum.ulpu, 2)
        self.assertEqual (unum.smallsubnormalu, 2)
        self.assertEqual (unum.smallnormalu, 4)
        self.assertEqual (unum.signbigu, 8)
        self.assertEqual (unum.posinfu,  6)
        self.assertEqual (unum.maxrealu, 4)
        self.assertEqual (unum.minrealu, 12)
        self.assertEqual (unum.neginfu, 14)
        self.assertEqual (unum.negbigu, 12)
        self.assertEqual (unum.qNaNu, 7)
        self.assertEqual (unum.sNaNu, 15)
        self.assertEqual (unum.negopeninfu, 13)
        self.assertEqual (unum.posopeninfu, 5)
        self.assertEqual (unum.negopenzerou, 9)
        self.assertEqual (unum.maxreal, 2)
        self.assertEqual (unum.smallsubnormal, 1)

    def test_setenv_4_11(self):
        unum.setenv((4, 11))
        self.assertEqual (unum.esizesize, 4)
        self.assertEqual (unum.fsizesize, 11)
        self.assertEqual (unum.esizemax, 16)
        self.assertEqual (unum.fsizemax, 2048)
        self.assertEqual (unum.utagsize, 16)
        self.assertEqual (unum.maxubits, 2081)
        self.assertEqual (unum.ubitmask, 32768)
        self.assertEqual (unum.fsizemask, 2047)
        self.assertEqual (unum.esizemask, 30720)
        self.assertEqual (unum.efsizemask, 32767)
        self.assertEqual (unum.utagmask, 65535)
        self.assertEqual (unum.ulpu, 65536)
        self.assertEqual (unum.smallsubnormalu, 98303)
        self.assertEqual (unum.smallnormalu, 2117927309889438174459650158668673971679664712562473961529694317938255799180846097576571791705565656756303820286977508605566619428486573004887697154798274682593665179143438079868940959769536240470986433389138252154587854840962728339822221350566374307960038742559051287290680173628035288832904554028985901745564177753025304488882010507612295626414894352651145842398187071689918132565341655148151347141946711521751440013293116283787565541117240665991000726780856711985700908873208313264547895818776171214908852966565917355871174476978782118754092657304498165222185509547752135370035591813854143984012876422254401698572304383L)
        self.assertEqual (unum.signbigu, 138800484180914220201387632798510217407998506602494293542810046820401532055115929850778208941215950881181127166327358003974413970865296048448320120736859729598458441180344358002290914739456327055506566898590564493203069654857333364478589098430717906646469099032349985163882015858886920688953232852843620056797293953222266354983371440626879406172726516295345493927407587930270474735802230711789246686294619686289502372711177668774301895302659484286386223630310225476694894763914580018105410900379315156740266588016863959834373290523281464934668216389107591756001149553721483943610652545112745180136267869208864469717632392626176L)
        self.assertEqual (unum.posinfu,  138800484180914220201387632798510217407998506602494293542810046820401532055115929850778208941215950881181127166327358003974413970865296048448320120736859729598458441180344358002290914739456327055506566898590564493203069654857333364478589098430717906646469099032349985163882015858886920688953232852843620056797293953222266354983371440626879406172726516295345493927407587930270474735802230711789246686294619686289502372711177668774301895302659484286386223630310225476694894763914580018105410900379315156740266588016863959834373290523281464934668216389107591756001149553721483943610652545112745180136267869208864469717632392593407L)
        self.assertEqual (unum.maxrealu, 138800484180914220201387632798510217407998506602494293542810046820401532055115929850778208941215950881181127166327358003974413970865296048448320120736859729598458441180344358002290914739456327055506566898590564493203069654857333364478589098430717906646469099032349985163882015858886920688953232852843620056797293953222266354983371440626879406172726516295345493927407587930270474735802230711789246686294619686289502372711177668774301895302659484286386223630310225476694894763914580018105410900379315156740266588016863959834373290523281464934668216389107591756001149553721483943610652545112745180136267869208864469717632392527871L)
        self.assertEqual (unum.minrealu, 277600968361828440402775265597020434815997013204988587085620093640803064110231859701556417882431901762362254332654716007948827941730592096896640241473719459196916882360688716004581829478912654111013133797181128986406139309714666728957178196861435813292938198064699970327764031717773841377906465705687240113594587906444532709966742881253758812345453032590690987854815175860540949471604461423578493372589239372579004745422355337548603790605318968572772447260620450953389789527829160036210821800758630313480533176033727919668746581046562929869336432778215183512002299107442967887221305090225490360272535738417728939435264785154047L)
        self.assertEqual (unum.neginfu, 277600968361828440402775265597020434815997013204988587085620093640803064110231859701556417882431901762362254332654716007948827941730592096896640241473719459196916882360688716004581829478912654111013133797181128986406139309714666728957178196861435813292938198064699970327764031717773841377906465705687240113594587906444532709966742881253758812345453032590690987854815175860540949471604461423578493372589239372579004745422355337548603790605318968572772447260620450953389789527829160036210821800758630313480533176033727919668746581046562929869336432778215183512002299107442967887221305090225490360272535738417728939435264785219583L)
        self.assertEqual (unum.negbigu, 277600968361828440402775265597020434815997013204988587085620093640803064110231859701556417882431901762362254332654716007948827941730592096896640241473719459196916882360688716004581829478912654111013133797181128986406139309714666728957178196861435813292938198064699970327764031717773841377906465705687240113594587906444532709966742881253758812345453032590690987854815175860540949471604461423578493372589239372579004745422355337548603790605318968572772447260620450953389789527829160036210821800758630313480533176033727919668746581046562929869336432778215183512002299107442967887221305090225490360272535738417728939435264785154047L)
        self.assertEqual (unum.qNaNu, 138800484180914220201387632798510217407998506602494293542810046820401532055115929850778208941215950881181127166327358003974413970865296048448320120736859729598458441180344358002290914739456327055506566898590564493203069654857333364478589098430717906646469099032349985163882015858886920688953232852843620056797293953222266354983371440626879406172726516295345493927407587930270474735802230711789246686294619686289502372711177668774301895302659484286386223630310225476694894763914580018105410900379315156740266588016863959834373290523281464934668216389107591756001149553721483943610652545112745180136267869208864469717632392626175L)
        self.assertEqual (unum.sNaNu, 277600968361828440402775265597020434815997013204988587085620093640803064110231859701556417882431901762362254332654716007948827941730592096896640241473719459196916882360688716004581829478912654111013133797181128986406139309714666728957178196861435813292938198064699970327764031717773841377906465705687240113594587906444532709966742881253758812345453032590690987854815175860540949471604461423578493372589239372579004745422355337548603790605318968572772447260620450953389789527829160036210821800758630313480533176033727919668746581046562929869336432778215183512002299107442967887221305090225490360272535738417728939435264785252351L)
        self.assertEqual (unum.negopeninfu, 491520)
        self.assertEqual (unum.posopeninfu, 229376)
        self.assertEqual (unum.negopenzerou, 294912)
        self.assertEqual (unum.maxreal, )
        self.assertEqual (unum.smallsubnormal, 0.0)

suite = unittest.TestLoader().loadTestsFromTestCase(TestSetenv)

if __name__ == '__main__':
    unittest.main()
